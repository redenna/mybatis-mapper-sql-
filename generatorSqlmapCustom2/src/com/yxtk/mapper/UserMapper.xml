<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yxtk.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.yxtk.po.User" >
    <id column="us307_id" property="id" jdbcType="INTEGER" />
    <result column="us307_passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="us307_nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="us307_mobile_phone" property="mobilePhone" jdbcType="VARCHAR" />
    <result column="us307_email" property="email" jdbcType="VARCHAR" />
    <result column="us307_header_img_url" property="headerImgUrl" jdbcType="VARCHAR" />
    <result column="us307_real_name" property="realName" jdbcType="VARCHAR" />
    <result column="us307_sex" property="sex" jdbcType="VARCHAR" />
    <result column="us307_education" property="education" jdbcType="VARCHAR" />
    <result column="us307_born_date" property="bornDate" jdbcType="TIMESTAMP" />
    <result column="us307_ID_code" property="idCode" jdbcType="VARCHAR" />
    <result column="us307_ID_front_img_url" property="idFrontImgUrl" jdbcType="VARCHAR" />
    <result column="us307_ID_opposite_img_url" property="idOppositeImgUrl" jdbcType="VARCHAR" />
    <result column="us307_ID_person_img_url" property="idPersonImgUrl" jdbcType="VARCHAR" />
    <result column="us307_is_bind_mobile" property="isBindMobile" jdbcType="INTEGER" />
    <result column="us307_is_bind_email" property="isBindEmail" jdbcType="INTEGER" />
    <result column="us307_is_real_check" property="isRealCheck" jdbcType="INTEGER" />
    <result column="us307_real_check_time" property="realCheckTime" jdbcType="TIMESTAMP" />
    <result column="us307_wallet" property="wallet" jdbcType="DOUBLE" />
    <result column="us307_client_id" property="clientId" jdbcType="VARCHAR" />
    <result column="us307_rongyuntoken" property="rongyuntoken" jdbcType="VARCHAR" />
    <result column="us307_create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yxtk.po.User" extends="BaseResultMap" />
  <resultMap id="ResultMapWithBLOBsVo" type="com.yxtk.po.User" extends="ResultMapWithBLOBs" />
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause_For_Delete" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.trimCondition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.trimCondition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.trimCondition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.trimCondition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    us307.id as us307_id, us307.passwd as us307_passwd, us307.nickname as us307_nickname, 
    us307.mobile_phone as us307_mobile_phone, us307.email as us307_email, us307.header_img_url as us307_header_img_url, 
    us307.real_name as us307_real_name, us307.sex as us307_sex, us307.education as us307_education, 
    us307.born_date as us307_born_date, us307.ID_code as us307_ID_code, us307.ID_front_img_url as us307_ID_front_img_url, 
    us307.ID_opposite_img_url as us307_ID_opposite_img_url, us307.ID_person_img_url as us307_ID_person_img_url, 
    us307.is_bind_mobile as us307_is_bind_mobile, us307.is_bind_email as us307_is_bind_email, 
    us307.is_real_check as us307_is_real_check, us307.real_check_time as us307_real_check_time, 
    us307.wallet as us307_wallet, us307.client_id as us307_client_id, us307.rongyuntoken as us307_rongyuntoken, 
    us307.create_time as us307_create_time
  </sql>
  <sql id="Blob_Column_List" />
  <sql id="Other_Column_List" >
    <foreach collection="otherColumns" item="column" separator="," >
      ${column}
    </foreach>
  </sql>
  <sql id="Other_Blob_Column_List" >
    <foreach collection="otherBlobColumns" item="column" separator="," >
      ${column}
    </foreach>
  </sql>
  <sql id="Union_Table_List" >
    <foreach collection="unionTables" item="table" separator="," >
      ${table}
    </foreach>
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBsVo" parameterType="com.yxtk.po.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    <if test="otherColumns != null and otherColumns.size>0" >
      , 
      <include refid="Other_Column_List" />
    </if>
    <if test="otherBlobColumns != null and otherBlobColumns.size>0" >
      , 
      <include refid="Other_Blob_Column_List" />
    </if>
    from user us307
    <if test="unionTables != null and unionTables.size>0" >
      , 
      <include refid="Union_Table_List" />
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByExample" resultMap="ResultMapWithBLOBsVo" parameterType="com.yxtk.po.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    <if test="otherColumns != null and otherColumns.size>0" >
      , 
      <include refid="Other_Column_List" />
    </if>
    from user us307
    <if test="unionTables != null and unionTables.size>0" >
      , 
      <include refid="Union_Table_List" />
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user us307
    where us307.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yxtk.po.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_For_Delete" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yxtk.po.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (passwd, nickname, mobile_phone, 
      email, header_img_url, real_name, 
      sex, education, born_date, 
      ID_code, ID_front_img_url, ID_opposite_img_url, 
      ID_person_img_url, is_bind_mobile, is_bind_email, 
      is_real_check, real_check_time, wallet, 
      client_id, rongyuntoken, create_time
      )
    values (#{passwd,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{headerImgUrl,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{bornDate,jdbcType=TIMESTAMP}, 
      #{idCode,jdbcType=VARCHAR}, #{idFrontImgUrl,jdbcType=VARCHAR}, #{idOppositeImgUrl,jdbcType=VARCHAR}, 
      #{idPersonImgUrl,jdbcType=VARCHAR}, #{isBindMobile,jdbcType=INTEGER}, #{isBindEmail,jdbcType=INTEGER}, 
      #{isRealCheck,jdbcType=INTEGER}, #{realCheckTime,jdbcType=TIMESTAMP}, #{wallet,jdbcType=DOUBLE}, 
      #{clientId,jdbcType=VARCHAR}, #{rongyuntoken,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yxtk.po.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="mobilePhone != null" >
        mobile_phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="headerImgUrl != null" >
        header_img_url,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="bornDate != null" >
        born_date,
      </if>
      <if test="idCode != null" >
        ID_code,
      </if>
      <if test="idFrontImgUrl != null" >
        ID_front_img_url,
      </if>
      <if test="idOppositeImgUrl != null" >
        ID_opposite_img_url,
      </if>
      <if test="idPersonImgUrl != null" >
        ID_person_img_url,
      </if>
      <if test="isBindMobile != null" >
        is_bind_mobile,
      </if>
      <if test="isBindEmail != null" >
        is_bind_email,
      </if>
      <if test="isRealCheck != null" >
        is_real_check,
      </if>
      <if test="realCheckTime != null" >
        real_check_time,
      </if>
      <if test="wallet != null" >
        wallet,
      </if>
      <if test="clientId != null" >
        client_id,
      </if>
      <if test="rongyuntoken != null" >
        rongyuntoken,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null" >
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="headerImgUrl != null" >
        #{headerImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="bornDate != null" >
        #{bornDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idCode != null" >
        #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="idFrontImgUrl != null" >
        #{idFrontImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="idOppositeImgUrl != null" >
        #{idOppositeImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="idPersonImgUrl != null" >
        #{idPersonImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="isBindMobile != null" >
        #{isBindMobile,jdbcType=INTEGER},
      </if>
      <if test="isBindEmail != null" >
        #{isBindEmail,jdbcType=INTEGER},
      </if>
      <if test="isRealCheck != null" >
        #{isRealCheck,jdbcType=INTEGER},
      </if>
      <if test="realCheckTime != null" >
        #{realCheckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="wallet != null" >
        #{wallet,jdbcType=DOUBLE},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="rongyuntoken != null" >
        #{rongyuntoken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yxtk.po.UserExample" resultType="java.lang.Integer" >
    select count(*) from user us307
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user us307
    <set >
      <if test="record.id != null" >
        us307.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.passwd != null" >
        us307.passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        us307.nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilePhone != null" >
        us307.mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        us307.email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.headerImgUrl != null" >
        us307.header_img_url = #{record.headerImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null" >
        us307.real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        us307.sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        us307.education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.bornDate != null" >
        us307.born_date = #{record.bornDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.idCode != null" >
        us307.ID_code = #{record.idCode,jdbcType=VARCHAR},
      </if>
      <if test="record.idFrontImgUrl != null" >
        us307.ID_front_img_url = #{record.idFrontImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.idOppositeImgUrl != null" >
        us307.ID_opposite_img_url = #{record.idOppositeImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.idPersonImgUrl != null" >
        us307.ID_person_img_url = #{record.idPersonImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.isBindMobile != null" >
        us307.is_bind_mobile = #{record.isBindMobile,jdbcType=INTEGER},
      </if>
      <if test="record.isBindEmail != null" >
        us307.is_bind_email = #{record.isBindEmail,jdbcType=INTEGER},
      </if>
      <if test="record.isRealCheck != null" >
        us307.is_real_check = #{record.isRealCheck,jdbcType=INTEGER},
      </if>
      <if test="record.realCheckTime != null" >
        us307.real_check_time = #{record.realCheckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.wallet != null" >
        us307.wallet = #{record.wallet,jdbcType=DOUBLE},
      </if>
      <if test="record.clientId != null" >
        us307.client_id = #{record.clientId,jdbcType=VARCHAR},
      </if>
      <if test="record.rongyuntoken != null" >
        us307.rongyuntoken = #{record.rongyuntoken,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        us307.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update user us307
    set us307.id = #{record.id,jdbcType=INTEGER},
      us307.passwd = #{record.passwd,jdbcType=VARCHAR},
      us307.nickname = #{record.nickname,jdbcType=VARCHAR},
      us307.mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      us307.email = #{record.email,jdbcType=VARCHAR},
      us307.header_img_url = #{record.headerImgUrl,jdbcType=VARCHAR},
      us307.real_name = #{record.realName,jdbcType=VARCHAR},
      us307.sex = #{record.sex,jdbcType=VARCHAR},
      us307.education = #{record.education,jdbcType=VARCHAR},
      us307.born_date = #{record.bornDate,jdbcType=TIMESTAMP},
      us307.ID_code = #{record.idCode,jdbcType=VARCHAR},
      us307.ID_front_img_url = #{record.idFrontImgUrl,jdbcType=VARCHAR},
      us307.ID_opposite_img_url = #{record.idOppositeImgUrl,jdbcType=VARCHAR},
      us307.ID_person_img_url = #{record.idPersonImgUrl,jdbcType=VARCHAR},
      us307.is_bind_mobile = #{record.isBindMobile,jdbcType=INTEGER},
      us307.is_bind_email = #{record.isBindEmail,jdbcType=INTEGER},
      us307.is_real_check = #{record.isRealCheck,jdbcType=INTEGER},
      us307.real_check_time = #{record.realCheckTime,jdbcType=TIMESTAMP},
      us307.wallet = #{record.wallet,jdbcType=DOUBLE},
      us307.client_id = #{record.clientId,jdbcType=VARCHAR},
      us307.rongyuntoken = #{record.rongyuntoken,jdbcType=VARCHAR},
      us307.create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user us307
    set us307.id = #{record.id,jdbcType=INTEGER},
      us307.passwd = #{record.passwd,jdbcType=VARCHAR},
      us307.nickname = #{record.nickname,jdbcType=VARCHAR},
      us307.mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      us307.email = #{record.email,jdbcType=VARCHAR},
      us307.header_img_url = #{record.headerImgUrl,jdbcType=VARCHAR},
      us307.real_name = #{record.realName,jdbcType=VARCHAR},
      us307.sex = #{record.sex,jdbcType=VARCHAR},
      us307.education = #{record.education,jdbcType=VARCHAR},
      us307.born_date = #{record.bornDate,jdbcType=TIMESTAMP},
      us307.ID_code = #{record.idCode,jdbcType=VARCHAR},
      us307.ID_front_img_url = #{record.idFrontImgUrl,jdbcType=VARCHAR},
      us307.ID_opposite_img_url = #{record.idOppositeImgUrl,jdbcType=VARCHAR},
      us307.ID_person_img_url = #{record.idPersonImgUrl,jdbcType=VARCHAR},
      us307.is_bind_mobile = #{record.isBindMobile,jdbcType=INTEGER},
      us307.is_bind_email = #{record.isBindEmail,jdbcType=INTEGER},
      us307.is_real_check = #{record.isRealCheck,jdbcType=INTEGER},
      us307.real_check_time = #{record.realCheckTime,jdbcType=TIMESTAMP},
      us307.wallet = #{record.wallet,jdbcType=DOUBLE},
      us307.client_id = #{record.clientId,jdbcType=VARCHAR},
      us307.rongyuntoken = #{record.rongyuntoken,jdbcType=VARCHAR},
      us307.create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yxtk.po.User" >
    update user
    <set >
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null" >
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="headerImgUrl != null" >
        header_img_url = #{headerImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="bornDate != null" >
        born_date = #{bornDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idCode != null" >
        ID_code = #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="idFrontImgUrl != null" >
        ID_front_img_url = #{idFrontImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="idOppositeImgUrl != null" >
        ID_opposite_img_url = #{idOppositeImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="idPersonImgUrl != null" >
        ID_person_img_url = #{idPersonImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="isBindMobile != null" >
        is_bind_mobile = #{isBindMobile,jdbcType=INTEGER},
      </if>
      <if test="isBindEmail != null" >
        is_bind_email = #{isBindEmail,jdbcType=INTEGER},
      </if>
      <if test="isRealCheck != null" >
        is_real_check = #{isRealCheck,jdbcType=INTEGER},
      </if>
      <if test="realCheckTime != null" >
        real_check_time = #{realCheckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="wallet != null" >
        wallet = #{wallet,jdbcType=DOUBLE},
      </if>
      <if test="clientId != null" >
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="rongyuntoken != null" >
        rongyuntoken = #{rongyuntoken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yxtk.po.User" >
    update user
    set passwd = #{passwd,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      header_img_url = #{headerImgUrl,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      born_date = #{bornDate,jdbcType=TIMESTAMP},
      ID_code = #{idCode,jdbcType=VARCHAR},
      ID_front_img_url = #{idFrontImgUrl,jdbcType=VARCHAR},
      ID_opposite_img_url = #{idOppositeImgUrl,jdbcType=VARCHAR},
      ID_person_img_url = #{idPersonImgUrl,jdbcType=VARCHAR},
      is_bind_mobile = #{isBindMobile,jdbcType=INTEGER},
      is_bind_email = #{isBindEmail,jdbcType=INTEGER},
      is_real_check = #{isRealCheck,jdbcType=INTEGER},
      real_check_time = #{realCheckTime,jdbcType=TIMESTAMP},
      wallet = #{wallet,jdbcType=DOUBLE},
      client_id = #{clientId,jdbcType=VARCHAR},
      rongyuntoken = #{rongyuntoken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yxtk.po.User" >
    update user
    set passwd = #{passwd,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      header_img_url = #{headerImgUrl,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      born_date = #{bornDate,jdbcType=TIMESTAMP},
      ID_code = #{idCode,jdbcType=VARCHAR},
      ID_front_img_url = #{idFrontImgUrl,jdbcType=VARCHAR},
      ID_opposite_img_url = #{idOppositeImgUrl,jdbcType=VARCHAR},
      ID_person_img_url = #{idPersonImgUrl,jdbcType=VARCHAR},
      is_bind_mobile = #{isBindMobile,jdbcType=INTEGER},
      is_bind_email = #{isBindEmail,jdbcType=INTEGER},
      is_real_check = #{isRealCheck,jdbcType=INTEGER},
      real_check_time = #{realCheckTime,jdbcType=TIMESTAMP},
      wallet = #{wallet,jdbcType=DOUBLE},
      client_id = #{clientId,jdbcType=VARCHAR},
      rongyuntoken = #{rongyuntoken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>