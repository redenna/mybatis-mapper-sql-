<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yxtk.mapper.ApplyMapper" >
  <resultMap id="BaseResultMap" type="com.yxtk.po.Apply" >
    <id column="ap230_id" property="id" jdbcType="INTEGER" />
    <result column="ap230_user_id" property="userId" jdbcType="INTEGER" />
    <result column="ap230_publish_type_id" property="publishTypeId" jdbcType="INTEGER" />
    <result column="ap230_publish_id" property="publishId" jdbcType="INTEGER" />
    <result column="ap230_create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yxtk.po.Apply" extends="BaseResultMap" >
    <result column="ap230_description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBsVo" type="com.yxtk.vo.ApplyVo" extends="ResultMapWithBLOBs" >
    <association property="user" javaType="com.yxtk.po.User" resultMap="com.yxtk.mapper.UserMapper.ResultMapWithBLOBsVo" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause_For_Delete" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.trimCondition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.trimCondition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.trimCondition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.trimCondition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ap230.id as ap230_id, ap230.user_id as ap230_user_id, ap230.publish_type_id as ap230_publish_type_id, 
    ap230.publish_id as ap230_publish_id, ap230.create_time as ap230_create_time
  </sql>
  <sql id="Blob_Column_List" >
    ap230.description as ap230_description
  </sql>
  <sql id="Other_Column_List" >
    <foreach collection="otherColumns" item="column" separator="," >
      ${column}
    </foreach>
  </sql>
  <sql id="Other_Blob_Column_List" >
    <foreach collection="otherBlobColumns" item="column" separator="," >
      ${column}
    </foreach>
  </sql>
  <sql id="Union_Table_List" >
    <foreach collection="unionTables" item="table" separator="," >
      ${table}
    </foreach>
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBsVo" parameterType="com.yxtk.po.ApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    <if test="otherColumns != null and otherColumns.size>0" >
      , 
      <include refid="Other_Column_List" />
    </if>
    <if test="otherBlobColumns != null and otherBlobColumns.size>0" >
      , 
      <include refid="Other_Blob_Column_List" />
    </if>
    from apply ap230
    <if test="unionTables != null and unionTables.size>0" >
      , 
      <include refid="Union_Table_List" />
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByExample" resultMap="ResultMapWithBLOBsVo" parameterType="com.yxtk.po.ApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    <if test="otherColumns != null and otherColumns.size>0" >
      , 
      <include refid="Other_Column_List" />
    </if>
    from apply ap230
    <if test="unionTables != null and unionTables.size>0" >
      , 
      <include refid="Union_Table_List" />
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from apply ap230
    where ap230.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yxtk.po.ApplyExample" >
    delete from apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_For_Delete" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yxtk.po.Apply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into apply (user_id, publish_type_id, publish_id, 
      create_time, description)
    values (#{userId,jdbcType=INTEGER}, #{publishTypeId,jdbcType=INTEGER}, #{publishId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yxtk.po.Apply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="publishTypeId != null" >
        publish_type_id,
      </if>
      <if test="publishId != null" >
        publish_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="publishTypeId != null" >
        #{publishTypeId,jdbcType=INTEGER},
      </if>
      <if test="publishId != null" >
        #{publishId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yxtk.po.ApplyExample" resultType="java.lang.Integer" >
    select count(*) from apply ap230
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update apply ap230
    <set >
      <if test="record.id != null" >
        ap230.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        ap230.user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.publishTypeId != null" >
        ap230.publish_type_id = #{record.publishTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.publishId != null" >
        ap230.publish_id = #{record.publishId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        ap230.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null" >
        ap230.description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update apply ap230
    set ap230.id = #{record.id,jdbcType=INTEGER},
      ap230.user_id = #{record.userId,jdbcType=INTEGER},
      ap230.publish_type_id = #{record.publishTypeId,jdbcType=INTEGER},
      ap230.publish_id = #{record.publishId,jdbcType=INTEGER},
      ap230.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ap230.description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update apply ap230
    set ap230.id = #{record.id,jdbcType=INTEGER},
      ap230.user_id = #{record.userId,jdbcType=INTEGER},
      ap230.publish_type_id = #{record.publishTypeId,jdbcType=INTEGER},
      ap230.publish_id = #{record.publishId,jdbcType=INTEGER},
      ap230.create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yxtk.po.Apply" >
    update apply
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="publishTypeId != null" >
        publish_type_id = #{publishTypeId,jdbcType=INTEGER},
      </if>
      <if test="publishId != null" >
        publish_id = #{publishId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yxtk.po.Apply" >
    update apply
    set user_id = #{userId,jdbcType=INTEGER},
      publish_type_id = #{publishTypeId,jdbcType=INTEGER},
      publish_id = #{publishId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yxtk.po.Apply" >
    update apply
    set user_id = #{userId,jdbcType=INTEGER},
      publish_type_id = #{publishTypeId,jdbcType=INTEGER},
      publish_id = #{publishId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>